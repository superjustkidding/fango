services:
  # Redis 服务
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/library/redis:7-alpine
    container_name: fango-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - fango-network

  # RabbitMQ 服务
  rabbitmq:
    image: registry.cn-hangzhou.aliyuncs.com/library/rabbitmq:3-management
    container_name: fango-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP 协议端口
      - "15672:15672" # 管理界面端口
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq
    networks:
      - fango-network

  # MongoDB 服务
  mongodb:
    image: registry.cn-hangzhou.aliyuncs.com/library/mongo:6.0
    container_name: fango-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=fango_logs
    volumes:
      - ./mongodb/data:/data/db
      - ./mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - fango-network

  # portainer服务
  portainer:
    image: registry.cn-hangzhou.aliyuncs.com/portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:

networks:
  fango-network:
    name: fango-network  # 明确指定网络名称
    driver: bridge