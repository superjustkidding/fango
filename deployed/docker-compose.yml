services:
  web:
    build: ..
    ports:
      - "5000:5000"
    volumes:
      - ..:/app
      - ./logs:/app/logs
    env_file:
      - ../.env  # 引用根目录的 .env 文件
    environment:
      - FLASK_APP=app/__init__.py
      - FLASK_ENV=${DEVELOPMENT:-development}  # 使用 .env 中的 DEVELOPMENT 变量作为 FLASK_ENV
    restart: unless-stopped
    networks:
      - fango-network
    command: /start-web.sh

  celery-worker:
    build: ..
    volumes:
      - ..:/app
      - ./logs:/app/logs
    env_file:
      - ../.env  # 引用根目录的 .env 文件
    environment:
      - FLASK_APP=app/__init__.py
      - FLASK_ENV=${DEVELOPMENT:-development}  # 使用 .env 中的 DEVELOPMENT 变量作为 FLASK_ENV
    restart: unless-stopped
    networks:
      - fango-network
    command: /start-celery-worker.sh

  celery-beat:
    build: ..
    volumes:
      - ..:/app
      - ./logs:/app/logs
    env_file:
      - ../.env  # 引用根目录的 .env 文件
    environment:
      - FLASK_APP=app/__init__.py
      - FLASK_ENV=${DEVELOPMENT:-development}  # 使用 .env 中的 DEVELOPMENT 变量作为 FLASK_ENV
    restart: unless-stopped
    networks:
      - fango-network
    command: /start-celery-beat.sh

networks:
  fango-network:
    driver: bridge

volumes:
  logs: